name: Pipeline Tests

on:
  schedule:
    - cron: '35 5 * * *'
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Cache APT packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-${{ hashFiles('/etc/apt/sources.list', '/etc/apt/sources.list.d/*.list') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install FFmpeg and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg mesa-va-drivers mesa-vdpau-drivers
    
    - name: Cache NuGet packages
      id: cache-nuget
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.fsproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Cache .NET build output
      uses: actions/cache@v4
      with:
        path: |
          **/bin
          **/obj
        key: build-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          build-${{ runner.os }}-
            
    - name: Restore dependencies
      run: dotnet restore --use-current-runtime
      
    - name: Check if build output is cached
      id: build-cache-check
      run: |
        if [ -d "/home/runner/work/CynkyAutomation/CynkyAutomation/CynkyAutomation/bin/Release" ]; then
          echo "build=false" >> $GITHUB_ENV
        else
          echo "build=true" >> $GITHUB_ENV
        fi

    - name: Build
      if: env.build == 'true'
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

    # üîç Debug step: list test output directories
    - name: Debug output files
      if: always()
      run: |
        echo "Listing /bin/Release/net8.0 contents:"
        ls -R /home/runner/work/CynkyAutomation/CynkyAutomation/CynkyAutomation/bin/Release/net8.0 || true
        echo "Listing TestResults (if exists):"
        ls -R /home/runner/work/CynkyAutomation/CynkyAutomation/CynkyAutomation/TestResults || true

    # ‚úÖ Safer artifact upload (no tar exit code 2)
    - name: Upload Reports
      if: always() && hashFiles('**/Reports/**') != ''
      uses: actions/upload-artifact@v4
      with: 
        name: Reports
        path: '**/Reports/**'

    - name: Upload Data
      if: always() && hashFiles('**/Data/**') != ''
      uses: actions/upload-artifact@v4
      with: 
        name: Data
        path: '**/Data/**'
